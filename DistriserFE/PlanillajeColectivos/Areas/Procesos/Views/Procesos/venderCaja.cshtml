@model IEnumerable<PlanillajeColectivos.DTO.Products.products>

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "VENDER";
}
@*comentario*@

@{
    var serverDate = DateTime.Now.ToString("yyyy-MM-dd");
}

<link href="~/Content/css/chosen.css?v=@DateTime.Now.Ticks" rel="stylesheet" />
<script src="~/Scripts/sweetalert2@10.js"></script>
<input type="text" id="personaConvenio" value="0" hidden="hidden">

<p>@ViewBag.Ambiente</p>
<div class="card">
    <div class="card-body">
        <table class="table table-responsive table-bordered" border="1" cellpadding="0">
            <thead id="headamorti" class="thead-inverse">
                <tr>
                    <th>Intern</th>
                    <th>#</th>
                    <th>Cantidad</th>
                    <th>Codigo de BarrasX</th>
                    <th>Nombre</th>
                    <th>Precion Unidad</th>
                    <th>Total</th>
                    <th></th>
                </tr>
            </thead>
            <tbody id="tablaPedido"></tbody>
        </table>

        <div class="row">
            <div class="col-md-8"></div>
            <div class="col-md-2">
                <h3>TOTAL</h3>
            </div>
            <div class="col-md-2">
                <input id="valorTotal" readonly type="text" class="form-control" />
            </div>
        </div>
    </div>
</div>

<br />

<div class="card">
    <div class="card-header">
        DATOS DE LA FACTURA
    </div>
    <div class="card-body">
        <div class="row">
            <div class="col-md-4 col-xs-12 col-lg-3">
                <div class="form-group">
                    <label>CLIENTE:</label>
                    @Html.DropDownList("clientes", null, new { @class = "chosen-select-single", @id = "cliente" })
                </div>
            </div>
            <div class="col-md-4 col-xs-12 col-lg-3">
                <div class="form-group">
                    <label>FECHA:</label>
                    <input type="date" class="form-control" id="fecha" />
                </div>
            </div>
            <div class="col-md-4 col-xs-12 col-lg-3">
                <div class="form-group">
                    <label>FORMA DE PAGO:</label>
                    @Html.DropDownList("ListFormasPago", null, new { @class = "form-control", @id = "FormaPago" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-4 col-xs-12 col-lg-3">
                <div class="form-group">
                    <label>VALOR RECIBIDO:</label>
                    <input type="text" class="form-control" value="0" id="efectivo" autocomplete="off" />
                </div>
            </div>
        </div>

        <hr />
        <div class="row">
            <div class="col-auto">
                <div class="form-group">
                    <span></span>
                    <button id="btnTerminarFactura" class="btn btn-success">FACTURACIÓN POS</button>
                </div>

            </div>
            <div class="col-auto">
                <div class="form-group">
                    <span></span>
                    <button id="btnTerminarFacturaElectronica" class="btn btn-success">FACTURACIÓN ELECTRÓNICA</button>
                </div>

            </div>
        </div>
    </div>
</div>



<br />
<br />
<br />

<table id="myTable" class="table table-striped table-bordered table-responsive">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.barcode)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.name)
            </th>
            <th>
                Precio 1
            </th>
            <th>
                Precio 2
            </th>
            <th>
                En Inventario
            </th>
            <th>
                Precio de Venta
            </th>
            <th>
                Impuesto
            </th>
            <th>
                Precio 3
            </th>
            <th>
                Cantidad
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.barcode)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.priceOut)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.priceOut2)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.initialQuantity)
                </td>
                <td>
                    <select class="form-control precio-@item.id">
                        <option value="1" selected>Precio 1</option>
                        <option value="2">Precio 2</option>
                        <option value="3">Precio 3</option>
                    </select>
                </td>
                <td>                  
                    @Html.DisplayFor(modelItem => item.ivaFK.name)                 

                </td>                
                <td>
                    <input type="text" class="form-control precioOtro-@item.id precio3" />
                </td>
                <td>
                    <input type="text" class="form-control" id="@item.id" />
                </td>
                <td>
                    <button class="classBtnAgregar btn btn-success" id="@item.id">Agregar</button>
                </td>
            </tr>
        }
    </tbody>
</table>

<div id="loading" class="overlay-loading" style="display: none;">
    <img src="~/Content/imagenes/loading.gif" alt="Cargando..." />
</div>

@section scripts
{

    <script>


   
    window.onload = function () {
        var serverDate = "@serverDate";
        document.getElementById('fecha').value = serverDate;
    };
    


        $("#cliente").change(function () {
            //COMPROBAR SI YA ESTA REGISTRADO EN CASHBACK
            $.ajax({
                    type: "POST",
                    url: "@Url.Action("comprobarCashBack", "Procesos")",
                    datatype: "Json",
                    data: { id: $('#cliente').val() },//solo para enviar datos
                success: function (data) {
                    if (data == 12) {
                        $.ajax({
                            type: "POST",
                            url: "@Url.Action("GetInfoPerson", "Procesos")",
                            datatype: "Json",
                            data: { id: $('#cliente').val() },//solo para enviar datos
                            success: function (data) {
                                if (data != "no") {
                                    $("#acumulado").val(formatNumberMiles.new(data));
                                    $("#personaConvenio").val(1);
                                } else {
                                    $("#acumulado").val(0);
                                    $("#personaConvenio").val(0);
                                }
                            }
                        });
                    } else if (data == 11) {
                        $("#acumuladoMensaje").text("Acumulado CashBack");
                        $.ajax({
                            type: "POST",
                            url: "@Url.Action("GetCashBack", "Procesos")",
                            datatype: "Json",
                            data: { id: $('#cliente').val() },//solo para enviar datos
                            success: function (data) {
                                if (data != "no") {
                                    $("#acumulado").val(formatNumberMiles.new(data));
                                    $("#personaConvenio").val(0);
                                } else {
                                    $("#acumulado").val(0);
                                    $("#personaConvenio").val(0);
                                }
                            }
                        });
                    } else if (data == 21) {//SI ES ASOCIADO
                        Swal.fire({
                title: 'ELEGIR',
                icon: 'question',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Subsidio Vivienda',
                cancelButtonText: 'Subsidio Vivienda'
            }).then((result) => {
                if (result.value) {
                    $.ajax({
                            type: "POST",
                            url: "@Url.Action("grabarRegistroCashBack", "Procesos")",
                            datatype: "Json",
                            data: { id: $('#cliente').val(), destino:1, periodo:12 },//solo para enviar datos
                            success: function (data) {
                            }
                        });
                } else {
                    $.ajax({
                            type: "POST",
                            url: "@Url.Action("grabarRegistroCashBack", "Procesos")",
                            datatype: "Json",
                        data: { id: $('#cliente').val(), destino: 1, periodo:12 },//solo para enviar datos
                            success: function (data) {

                            }
                        });
                };
            });
                    } @*else if (data == 22) {//NO ES ASOCIADO
                        Swal.fire({
                            title: 'ELEGIR PERIODO DEVOLUCION',
                            icon: 'question',
                            showCancelButton: true,
                            confirmButtonColor: '#3085d6',
                            cancelButtonColor: '#d33',
                            confirmButtonText: '6 MESES',
                            cancelButtonText: '12 MESES'
                        }).then((result) => {
                            if (result.value) {
                                $.ajax({
                            type: "POST",
                            url: "@Url.Action("grabarRegistroCashBack", "Procesos")",
                            datatype: "Json",
                                    data: { id: $('#cliente').val(), destino: 2, periodo:6 },//solo para enviar datos
                            success: function (data) {

                            }
                        });
                            } else {
                                $.ajax({
                            type: "POST",
                            url: "@Url.Action("grabarRegistroCashBack", "Procesos")",
                            datatype: "Json",
                                    data: { id: $('#cliente').val(), destino: 2, periodo:12 },//solo para enviar datos
                            success: function (data) {

                            }
                        });
                            };
                        });
                    }*@
                }
            });
        });

        $("#btnTerminarFactura").click(function () {
            $("#btnTerminarFactura").prop("disabled", true);

            var cliente = $("#cliente").val();
            var total = $("#valorTotal").val();
            var efectivo = $("#efectivo").val();
            var fecha = $("#fecha").val();
            var FormaPago = $("#FormaPago").val();


            if (efectivo == "") {
                efectivo = "0";
            }


            var siHayProductos = $('td:nth-child(1)', "#tablaPedido").text();

            if (siHayProductos != "") {
                if (cliente != "") {

                    total = total.replace(".", "");
                    total = total.replace(".", "");
                    total = total.replace(".", "");
                    total = total.replace(",", "");
                    total = total.replace(",", "");
                    total = total.replace(",", "");

                    efectivo = efectivo.replace(".", "");
                    efectivo = efectivo.replace(".", "");
                    efectivo = efectivo.replace(".", "");
                    efectivo = efectivo.replace(",", "");
                    efectivo = efectivo.replace(",", "");
                    efectivo = efectivo.replace(",", "");


                    total = parseInt(total);
                    efectivo = parseInt(efectivo);


                    if (efectivo < total) {
                        Swal.fire({
                            icon: 'error',
                            title: 'Oops...',
                            text: 'Dinero insuficiente!'
                        })
                        $("#btnTerminarFactura").prop("disabled", false);

                    } else {
                            var facturacion = "POS"
                            var cambio = efectivo - total;
                            $.ajax({
                                type: "POST",
                                url: "@Url.Action("terminarFacturaVenderCaja", "Procesos")",
                                datatype: "Json",
                                data: { cliente: cliente, efectivo: efectivo, facturacion: facturacion, fecha: fecha, IdFormaPago: FormaPago },
                                success: function (data) {
                                    Swal.fire({
                                        title: 'Factura realizada Correctamente!... El Cambio es: $' + formatNumberMiles.new(cambio),
                                        icon: 'success',
                                        confirmButtonColor: '#3085d6',
                                        confirmButtonText: 'Imprimir'

                                    }).then((result) => {
                                        if (result.value) {
                                            var url = "/Procesos/Procesos/imprimirFacturaCaja?id=" + data;
                                            //window.open(url, '_blank');
                                            print_link(url);
                                            location.reload();
                                        } else {
                                            var url = "/Procesos/Procesos/imprimirFacturaCaja?id=" + data;
                                            //window.open(url, '_blank');
                                            print_link(url);
                                            location.reload();
                                        };
                                    });
                                }
                            });
                    }
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: 'Seleccione un Cliente!'
                    })
                    $("#btnTerminarFactura").prop("disabled", false);
                }
            } else {
                $("#btnTerminarFactura").prop("disabled", false);
            }

        });

        $("#btnTerminarFacturaElectronica").click(function () {
            $("#btnTerminarFacturaElectronica").prop("disabled", true);

            var cliente = $("#cliente").val();
            var total = $("#valorTotal").val();
            var efectivo = $("#efectivo").val();
            var fecha = $("#fecha").val();
            var FormaPago = $("#FormaPago").val();

            if (efectivo == "") {
                efectivo = "0";
            }


            var siHayProductos = $('td:nth-child(1)', "#tablaPedido").text();

            if (siHayProductos != "") {
                if (cliente != "") {

                    total = total.replace(".", "");
                    total = total.replace(".", "");
                    total = total.replace(".", "");
                    total = total.replace(",", "");
                    total = total.replace(",", "");
                    total = total.replace(",", "");

                    efectivo = efectivo.replace(".", "");
                    efectivo = efectivo.replace(".", "");
                    efectivo = efectivo.replace(".", "");
                    efectivo = efectivo.replace(",", "");
                    efectivo = efectivo.replace(",", "");
                    efectivo = efectivo.replace(",", "");


                    total = parseInt(total);
                    efectivo = parseInt(efectivo);


                    if (efectivo < total) {
                        Swal.fire({
                            icon: 'error',
                            title: 'Oops...',
                            text: 'Dinero insuficiente!'
                        });
                        $("#btnTerminarFacturaElectronica").prop("disabled", false);

                    } else {
                            var facturacion = "ELECTRONICA"
                            var cambio = efectivo - total;
                            $.ajax({
                                type: "POST",
                                url: "/Procesos/Procesos/terminarFacturaVenderCaja",
                                datatype: "Json",
                                data: { cliente: cliente, efectivo: efectivo, facturacion: facturacion, fecha: fecha, IdFormaPago: FormaPago },
                                beforeSend: function () {
                                    // Muestra el indicador de carga
                                    $('#loading').show();
                                },
                                success: function (data) {
                                    if (data.status) {
                                        $('#loading').hide();
                                        Swal.fire({
                                            title: 'Factura aceptada por la DIAN!... El Cambio es: $' + formatNumberMiles.new(cambio) + ' Factura No:' + data.numeroFactura ,
                                            icon: 'success',
                                            confirmButtonColor: '#3085d6',
                                            confirmButtonText: 'Aceptar'

                                        }).then((result) => {
                                            if (result.value) {
                                                //var url = "/Procesos/Procesos/imprimirFacturaCaja?id=" + data;
                                                //window.open(url, '_blank');
                                                //print_link(url);
                                                location.reload();
                                            } else {
                                                //var url = "/Procesos/Procesos/imprimirFacturaCaja?id=" + data;
                                                //window.open(url, '_blank');
                                                //print_link(url);
                                                location.reload();
                                            };
                                        });
                                    } else {
                                        $('#loading').hide();
                                        Swal.fire({
                                            icon: 'error',
                                            title: 'Ha ocurrido un error',
                                            text: 'Factura electrónica rechazada!' + data,
                                            confirmButtonText: 'Aceptar', // Texto del botón para aceptar
                                            // Puedes agregar más configuraciones aquí si es necesario
                                        }).then((result) => {
                                            if (result.isConfirmed) {
                                                // Acción a realizar cuando el usuario hace clic en el botón "Aceptar"
                                                console.log('Usuario aceptó el mensaje');
                                                location.reload();
                                            }
                                        });
                                    }


                                },
                                error: function (xhr, ajaxOptions, thrownError) {
                                    alert(xhr.status);
                                    alert(thrownError);
                                }
                            });
                    }
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: 'Seleccione un Cliente!'
                    })
                    $("#btnTerminarFacturaElectronica").prop("disabled", false);
                }
            } else {
                $("#btnTerminarFacturaElectronica").prop("disabled", false);
            }

        });


        function print_link(link) {
            var mywindow = window.open(link, 'title', 'height=500,width=500');
            mywindow.onload = function () { mywindow.print();}
        }

        $(document).ready(function () {

            document.getElementById("btnTerminarFacturaElectronica").disabled = false;

            renderTabla();

            $('#myTable').DataTable({
                "language": {
                    "url": "/Content/Spanish.json"
                }
            });

            $(".classBtnAgregar").click(function () {
                var id = $(this).attr("id");
                var valInput = $("#" + id).val();
                var precioSelect = $(".precio-" + id).val();
                var precioOtro = $(".precioOtro-" + id).val();

                if (precioOtro != "") {
                    precioOtro = precioOtro.replace(".", "");
                    precioOtro = precioOtro.replace(".", "");
                    precioOtro = precioOtro.replace(".", "");
                    precioOtro = precioOtro.replace(",", "");
                    precioOtro = precioOtro.replace(",", "");
                    precioOtro = precioOtro.replace(",", "");
                } else {
                    precioOtro = 0;
                }
                if (valInput > 0) {
                    $.ajax({
                    type: "POST",
                    url: "@Url.Action("verificarExistencia", "Procesos")",
                    datatype: "Json",
                    data: { id: id, cantidadPedida: valInput },
                        success: function (data) {
                            if (!data.status) {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Oops...',
                                    text: 'Cantidad insuficiente en Inventario!'
                                })
                            } else {
                                $.ajax({
                                    type: "POST",
                                    url: "@Url.Action("AddProductoVendiendoCaja", "Procesos")",
                                    datatype: "Json",
                                    data: { id: id, cantidad: valInput, precioSelect: precioSelect, precioOtro: precioOtro },
                                    success: function (data) {
                                        if (data == 1) {
                                            renderTabla();
                                            //Swal.fire({
                                            //    icon: 'success',
                                            //    title: 'Ok',
                                            //    text: 'Producto Agregado!'
                                            //})
                                        }
                                        $("#elBuscador").val("");
                                        $("#elBuscador").focus();
                                    }
                                });
                            }
                        }
                    });
                }
            });
        });

        $("#tablaPedido").on('click', 'button.borrar', function () {
            var id = $(this).parents('tr');
            var cId = $('td:nth-child(1)', id).text();

            Swal.fire({
                title: 'Quitar Producto?',
                icon: 'question',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'SI'
            }).then((result) => {
                if (result.value) {

                $.ajax({
                    type: "POST",
                    url: "@Url.Action("DeleteProductoContado", "Procesos")",
                    datatype: "Json",
                    data: { id: cId },//solo para enviar datos
                    success: function (data) {
                        Swal.fire(
                            'Eliminado!',
                            '',
                            'success'
                        )
                        renderTabla();
                    }
                });
                };
            });
        });


        function renderTabla() {
            $("#tablaPedido").empty();

            $.ajax({
                    type: "POST",
                    url: "@Url.Action("getVendiendoCaja", "Procesos")",
                    datatype: "Json",
                    success: function (data) {
                        data = JSON.parse(data);
                        var total = 0;
                        $.each(data, function (key, val) {

                            total = total + val.total;

                            var tr = '<tr>';
                            tr += '<td>' + val.operatioId + '</td>';
                            tr += '<td>' + (key + 1) + '</td>';
                            tr += '<td>' + val.cantidad + '</td>';
                            tr += '<td>' + val.codigoBarras + '</td>';
                            tr += '<td>' + val.nombre + '</td>';
                            tr += '<td>' + val.unidad + '</td>';
                            tr += '<td>' + val.total + '</td>';
                            tr += '<td><button class="borrar btn btn-danger btn-xs" id="' + val.operatioId + '">X</button></td>';
                            tr += '</tr>';
                            $('#tablaPedido').append(tr);
                        });
                        total = parseInt(total);
                        $("#valorTotal").val(formatNumberMiles.new(total));
                    }
            });
        }

        $(document).ready(function () {
            $(".chosen-select-single").chosen();
            $(".chosen-select-multiple").chosen();    //DESPUES DEL FINAL DEL DOCUMENTO AL PRINCIPIO DE LOS SCRIPTS
        });



        //FORMATEAR UN NUMERO
        var formatNumberMiles = {
            separador: ".", // separador para los miles
            sepDecimal: ',', // separador para los decimales
            formatear: function (num) {
                num += '';
                var splitStr = num.split('.');
                var splitLeft = splitStr[0];
                var splitRight = splitStr.length > 1 ? this.sepDecimal + splitStr[1] : '';
                var regx = /(\d+)(\d{3})/;
                while (regx.test(splitLeft)) {
                    splitLeft = splitLeft.replace(regx, '$1' + this.separador + '$2');
                }
                return this.simbol + splitLeft + splitRight;
            },
            new: function (num, simbol) {
                this.simbol = simbol || '';
                return this.formatear(num);
            }
        }

        /* SEPARADOR DE MILES POR KEY UP */
        $(document).ready(function () {
            $("#efectivo").on({
                "focus": function (event) {
                    $(event.target).select();
                },
                "keyup": function (event) {
                    $(event.target).val(function (index, value) {
                        return value.replace(/\D/g, "")
                            .replace(/([0-9])([0-9]{3})$/, '$1.$2')
                            .replace(/\B(?=(\d{3})+(?!\d)\.?)/g, ".");
                    });
                }
            });
        });
        /*FIN SEPARADOR DE MILES POR KEY UP*/

        /* SEPARADOR DE MILES POR KEY UP */
        $(document).ready(function () {
            $("#creditoSuperCosecha").on({
                "focus": function (event) {
                    $(event.target).select();
                },
                "keyup": function (event) {
                    $(event.target).val(function (index, value) {
                        return value.replace(/\D/g, "")
                            .replace(/([0-9])([0-9]{3})$/, '$1.$2')
                            .replace(/\B(?=(\d{3})+(?!\d)\.?)/g, ".");
                    });
                }
            });
        });
        /*FIN SEPARADOR DE MILES POR KEY UP*/

        /* SEPARADOR DE MILES POR KEY UP */
        $(document).ready(function () {
            $("#tarjeta").on({
                "focus": function (event) {
                    $(event.target).select();
                },
                "keyup": function (event) {
                    $(event.target).val(function (index, value) {
                        return value.replace(/\D/g, "")
                            .replace(/([0-9])([0-9]{3})$/, '$1.$2')
                            .replace(/\B(?=(\d{3})+(?!\d)\.?)/g, ".");
                    });
                }
            });
        });
        /*FIN SEPARADOR DE MILES POR KEY UP*/

        /* SEPARADOR DE MILES POR KEY UP */
        $(document).ready(function () {
            $("#tDebito").on({
                "focus": function (event) {
                    $(event.target).select();
                },
                "keyup": function (event) {
                    $(event.target).val(function (index, value) {
                        return value.replace(/\D/g, "")
                            .replace(/([0-9])([0-9]{3})$/, '$1.$2')
                            .replace(/\B(?=(\d{3})+(?!\d)\.?)/g, ".");
                    });
                }
            });
        });
        /*FIN SEPARADOR DE MILES POR KEY UP*/

        /* SEPARADOR DE MILES POR KEY UP */
        $(document).ready(function () {
            $("#tCredito").on({
                "focus": function (event) {
                    $(event.target).select();
                },
                "keyup": function (event) {
                    $(event.target).val(function (index, value) {
                        return value.replace(/\D/g, "")
                            .replace(/([0-9])([0-9]{3})$/, '$1.$2')
                            .replace(/\B(?=(\d{3})+(?!\d)\.?)/g, ".");
                    });
                }
            });
        });
        /*FIN SEPARADOR DE MILES POR KEY UP*/

        /* SEPARADOR DE MILES POR KEY UP */
        $(document).ready(function () {
            $("#consignacion").on({
                "focus": function (event) {
                    $(event.target).select();
                },
                "keyup": function (event) {
                    $(event.target).val(function (index, value) {
                        return value.replace(/\D/g, "")
                            .replace(/([0-9])([0-9]{3})$/, '$1.$2')
                            .replace(/\B(?=(\d{3})+(?!\d)\.?)/g, ".");
                    });
                }
            });
        });
        /*FIN SEPARADOR DE MILES POR KEY UP*/

        /* SEPARADOR DE MILES POR KEY UP */
        $(document).ready(function () {
            $("#transferencia").on({
                "focus": function (event) {
                    $(event.target).select();
                },
                "keyup": function (event) {
                    $(event.target).val(function (index, value) {
                        return value.replace(/\D/g, "")
                            .replace(/([0-9])([0-9]{3})$/, '$1.$2')
                            .replace(/\B(?=(\d{3})+(?!\d)\.?)/g, ".");
                    });
                }
            });
        });
        /*FIN SEPARADOR DE MILES POR KEY UP*/
    </script>
}
