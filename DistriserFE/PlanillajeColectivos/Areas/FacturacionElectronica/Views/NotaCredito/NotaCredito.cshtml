@model IEnumerable<PlanillajeColectivos.DTO.Products.products>

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "VENDER";
}


<link href="~/Content/css/chosen.css" rel="stylesheet" />
<script src="~/Scripts/sweetalert2@10.js"></script>
<input type="text" id="personaConvenio" value="0" hidden="hidden">
<script src="~/Scripts/FE/NotaCredito/IndexNC.js"></script>

<input type="hidden" name="name" id="InputId" value="@ViewBag.Id" />

<div class="card">
    <div class="card-body">
        <table class="table table-responsive table-bordered" border="1" cellpadding="0">
            <thead id="headamorti" class="thead-inverse">
                <tr>
                    <th>Intern</th>
                    <th>#</th>
                    <th>Cantidad</th>
                    <th>Codigo de Barras</th>
                    <th>Nombre</th>
                    <th>Precion Unidad</th>
                    <th>Total</th>
                    <th></th>
                </tr>
            </thead>
            <tbody id="tablaPedido"></tbody>
        </table>

        <div class="row">
            <div class="col-md-8"></div>
            <div class="col-md-2">
                <h3>TOTAL</h3>
            </div>
            <div class="col-md-2">
                <input id="valorTotal" readonly type="text" class="form-control" />
            </div>
        </div>
    </div>
</div>

<br />

<div class="card">
    <div class="card-header">
        <div class="row">
            <b><i class="fa fa-cog" aria-hidden="true"></i>&nbsp; Operaciones</b>
        </div>
    </div>

    <div class="card-body">
        <div class="row">
            Factura No: @ViewBag.NumFactura
        </div>
        <hr />
        <div class="row">
            <div class="col-md-3 col-xs-12">
                <div class="form-group">
                    <label>Receptor:</label>
                    <div class="col-md-12">
                        @Html.DropDownList("clientes", null, new { @class = "chosen-select-single", @id = "cliente" })
                    </div>
                </div>
            </div>
            <div class="col-md-3 col-xs-12">
                <div class="form-group">
                    <label>Código Referencia:</label>
                    <div class="col-md-12">
                        @Html.DropDownList("MotivosNC", null, new { @class = "form-control", @id = "motivoNC" })
                    </div>
                </div>
            </div>
            <div class="col-md-6 col-xs-12">
                <div class="form-group">
                    <label>Razón Referencia:</label>
                    <div class="col-md-12">
                        <input class="form-control" autocomplete="off" type="text" id="RazonMotivoNC" name="name" value="" />
                    </div>
                </div>
            </div>
        </div>
        <hr />  
        <div class="row">
            <div class="col-sm-1">
                <button class="btn btn-success fa fa-floppy-o" id="btnGuardar">&nbsp;Guardar</button>
            </div>
            <div class="col-sm-1">
                <button class="btn btn-danger fa fa-ban" id="btnCancelar">&nbsp;Cancelar</button>
            </div>
        </div>
        
    </div>
</div>


<br />
<br />
<br />

<table id="myTable" class="table table-striped table-bordered table-responsive">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.barcode)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.name)
            </th>
            <th>
                Precio 1
            </th>
            <th>
                Precio 2
            </th>
            <th>
                En Inventario
            </th>
            <th>
                Precio de Venta
            </th>
            <th>
                Precio 3
            </th>
            <th>
                Cantidad
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.barcode)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.priceOut)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.priceOut2)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.initialQuantity)
                </td>
                <td>
                    <select class="form-control precio-@item.id">
                        <option value="1" selected>Precio 1</option>
                        <option value="2">Precio 2</option>
                        <option value="3">Precio 3</option>
                    </select>
                </td>
                <td>
                    <input type="text" class="form-control precioOtro-@item.id precio3" />
                </td>
                <td>
                    <input type="text" class="form-control" id="@item.id" />
                </td>
                <td>
                    <button class="classBtnAgregar btn btn-success" id="@item.id">Agregar</button>
                </td>
            </tr>
        }
    </tbody>
</table>

@section scripts
{

    <script>
        
       



        //FORMATEAR UN NUMERO
        var formatNumberMiles = {
            separador: ".", // separador para los miles
            sepDecimal: ',', // separador para los decimales
            formatear: function (num) {
                num += '';
                var splitStr = num.split('.');
                var splitLeft = splitStr[0];
                var splitRight = splitStr.length > 1 ? this.sepDecimal + splitStr[1] : '';
                var regx = /(\d+)(\d{3})/;
                while (regx.test(splitLeft)) {
                    splitLeft = splitLeft.replace(regx, '$1' + this.separador + '$2');
                }
                return this.simbol + splitLeft + splitRight;
            },
            new: function (num, simbol) {
                this.simbol = simbol || '';
                return this.formatear(num);
            }
        }

    </script>
}
